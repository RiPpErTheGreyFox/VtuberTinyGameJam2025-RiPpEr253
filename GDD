VTuber Tiny Game Jam 2025

Platform:
Gameboy/Color Gameboy

Optional Theme: 
Space

Engine/Software used:
Custom GBZ80 engine, using RGBDS assembler
Aseprite - Art
NEXXT - Art
hUGETracker - Music

Schedule:
9 days total
Day 1: Concept/basic design (Saturday)
Days 2-3: MVP: Getting basic mechanics implemented and ROM up and running in the HTML5 emulator (Sunday, Monday)
Days 4-7: Iterating: adding more stuff from the feature list as needed, working on the mechanics, tweaking anything needed  (Tuesday, Wednesday, Thursday, Friday)
Day 8: Final Polish (Saturday)
Day 9: Submission Day (Sunday)

Basic Concept:
A spatial puzzle game that has players arranging boxes in a cargo bay from a top down 2D perspective

Elevator Pitch:
You are a worker at a space cargo dock, taking cargo from a belt from the station and loading ships that are about to depart,
you will have to ensure all cargo fits, without breaking any of the packing rules regarding hazardous materials

Art Style:
Cutesy/Chibi pixel art, very bright colours, lots of symbology where it'll fit to account for no color in the target 4 shades of grey version

Overview of features required:
A title screen
Controls help screen
Player Character
Picking up and dropping boxes on the floor
Scrolling screen
Cargo bay area with lines on the ground showing restrictions
Cargo boxes that have different properties that are visible
"Scoring" system to check if cargo placement is valid
Three different levels

Gameplay loop example:
Conveyor belt on the left holds a cargo box
Player moves over to the belt, picks up the box
Player now holding the box moves away and the next box appears on the belt
Player moves to the right into the outlined cargo area, and places a box, making sure that boxes that are incompatible aren't placed next to each other
Once all the boxes are taken off of the belt assuming all are placed in valid locations, then a victory screen is shown and allows the player to continue to a different level
If there are invalid box placements, flash them with an error logo to show the player which boxes need to move

Immediate To-do:
*Set up github
*A Sprite handler
	*^a function that takes in references to binary files, loads them to tiles, and returns a number for the tile index and length
		*^needs to keep global track of where the tiles are being loaded
Create metasprites/animations and handler for them
-- Will do during iteration
*Scrollable screen proof of concept
*Programmer Art for player, three box types, background
*Create a top-down player controller
*	^needs functions for collision detection, *updates, *does it's own key checking
*Proof of concept for picking up and dropping boxes (converting from background tile to sprite back to background)
*	^needs a function for converting an object to a background tile
*Going to need to load box tiles into middle of VRAM
	*^make the sprite loading function take a flag for if it needs to be object, background or both

Needed for MVP:
*Write Checklist
*Player character that is movable from top-down perspective
*^ need to answer the question, freeform movement or grid movement
*	^almost certainly grid based movement (see pokemon)
*	^ work out grid based movement (have an accepting input state, when accepting input set a destination for the next grid position)
*Collision based on background tiles
*scrollable level 1
*^ proven it can be done, will make level 2/3 scrollable
*boxes that are placable
*a "scoring" area for the boxes
*a conveyor belt that distributes the boxes in a random order (always set boxes for a level, just different order)
*two different types of hazardous box (explosive and radioactive)
*placeholder graphics for the two boxes, conveyor belt, level and player 

Monday Notes:
Place box in background tile
Determine which tile is “in front” by using a get tile by pixel to find the tile offset, check if the tile “in front”
(for now just directly to the right of the main character) is valid (empty space tiles, define these?) and just simply
replace it with a box tile, if it’s a box tile then spawn a box in the players hands, and read from the original tile to
replace it with the one that was supposed to be there (doing it tilemap style like this will make sure it’s 8 pixel aligned, even with a scrolled screen)

Start tracking direction on the player, flip them on X/Y to show direction for now (will use animation system in the end to pick a direction)

Keep an entire copy of tile map (Shadow Tilemap) in WRAM (high half, D800 to DBFF? Only needs a one bit change to offset it)
use that as a buffer for “previous” tiles (copy 9800 to 9BFF) (might not need this at all, just use the VRAM tilemap and the
ROM tilemap?) can calculate offsets the way we did with the tile loader (use 16-bit add/subtracts, can byte align the tilemap
on the cart to make it easier

Tuesday to-do:
*Update the makefile to include map and symbol export (so I can use romusage)
*Fix up the player so he doesn't use hardcoded OAM offsets
*Grid based movement
*	^ have a destination word for X/Y, use player update to shift player per frame to that destination
*		have a flag for accepting new input, when accepting new input, a button press will set the destination to
*		be 8 pixels in the direction pressed
*Collision detection in the movement
*	^directional collision detection
*Direction in the movement code
*	^needs to be reflected in the box/cursor code
*Conveyor that spawns it's own boxes when the current one gets picked up
*	^check if both special crates added together >= remaining crates, if so, push temp crate type to top
*Add a cursor to show where the boxes will be placed/picked up
*	^Sprite that appears over the box about to be picked up
*Spawn counter for the Conveyor
*	^number rendering
*Upload this to Itch.io
*End State Checking (shows victory on screen if all boxes placed in area with nothing adjacent and wrong)

Thursday to-do:
*Fix OAM timing bug
*	^ Add a WaitNoMode2
*		^ Already waits until out of mode 2
*Create scoring area algorithm
	^ use constants to define the top/bottom/left/right of the scoring area
		iterate through the tile map until finding a special crate, check the four directions and set a flag if non-matching special crates are found
			Tilemap is 32 wide, so just offset 32 bytes forward and backward for up/down and 1 byte for forward/back
*Level 1 pass
*	^ making the scoring area smaller
How to play page
Direction flipping on the main character sprite, ready for art pass
	^ animation handler added as well
Overlay sprites showing why the level isn't complete

Friday to-do:
*Get the placeholder scenes implemented: main menu, how to play, game, cutscene
*	^ have the entry point easily chanagable
*		make a main menu/how to play/game/cutscene load function as well as update functions
*		have a variable that checks current scene and an update function that just calls the correct update
*		MainMenu/GameScene separation done, need to do the other two
*Turn Level select into a variable
-Compose something in hUGETracker

Saturday to-do:
*Implement the dialog typewriter effect
Fine tune some sound effects, compose something in huge tracker
	^ three hours
*Draw an art pass on the level
*Animate the conveyor belt
Art pass on the little fella, make an animation handler
	^ two hours

Sunday to-do:
Finish the main menu graphics
	^ one hour
When other graphics are done, put examples in how to play slide
	^ half hour
Code in a page flip for the how to play
	^ half hour
Fix the cursor bug
	^ ?
Updated movement to have the first button press flip direction without moving
	^ one hour
use the art pass to design multiple levels and package it up
	^ two hours
		*^needs updated game logic to use variables instead of macros
		*	^ one hour - took 30 minutes

Notes:
Consider disabling diagonals
*Check if both special crates added together >= remaining crates, if so, push temp crate type to top

Features that are polish:
*Refined graphics for the two boxes, conveyor belt, -player and level
*Animated Conveyor Belt
CGB support, SGB support		- dropped
Dialogue with characters		- one hour
Tiny story that continues		- two hours
Intro cutscene					- one hour
Inbetween level cutscenes		- one hour
Level select
More puzzles/levels				- dropped
CGB exclusive level?			- dropped
GBA Easter Egg					- dropped